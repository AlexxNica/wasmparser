(module
  (type $type0 (func))
  (type $type1 (func (result i32)))
  (type $type2 (func (param i64) (result i64)))
  (type $type3 (func (param f32 f32) (result f32)))
  (export "empty" $func1)
  (export "singular" $func2)
  (export "multi" $func3)
  (export "nested" $func4)
  (export "deep" $func5)
  (export "as-unary-operand" $func6)
  (export "as-binary-operand" $func7)
  (export "as-test-operand" $func8)
  (export "as-compare-operand" $func9)
  (export "break-bare" $func10)
  (export "break-value" $func11)
  (export "break-repeated" $func12)
  (export "break-inner" $func13)
  (export "cont-inner" $func14)
  (export "effects" $func15)
  (export "while" $func16)
  (export "for" $func17)
  (export "nesting" $func18)
  (func $func0
    nop
  )
  (func $func1
    block
      loop
        nop
      end
      loop
        nop
      end
    end
  )
  (func $func2 (result i32)
    block i32
      loop
        nop
      end
      loop i32
        i32.const 7
      end
    end
  )
  (func $func3 (result i32)
    block i32
      loop
        call $func0
        call $func0
        call $func0
        call $func0
      end
      loop i32
        call $func0
        call $func0
        call $func0
        i32.const 8
      end
    end
  )
  (func $func4 (result i32)
    loop i32
      loop
        call $func0
        block
        end
        nop
      end
      loop i32
        call $func0
        i32.const 9
      end
    end
  )
  (func $func5 (result i32)
    loop i32
      loop i32
        loop i32
          loop i32
            loop i32
              loop i32
                loop i32
                  loop i32
                    loop i32
                      loop i32
                        loop i32
                          loop i32
                            loop i32
                              loop i32
                                loop i32
                                  loop i32
                                    loop i32
                                      loop i32
                                        loop i32
                                          loop i32
                                            loop i32
                                              loop i32
                                                call $func0
                                                i32.const 150
                                              end
                                            end
                                          end
                                        end
                                      end
                                    end
                                  end
                                end
                              end
                            end
                          end
                        end
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end
  )
  (func $func6 (result i32)
    loop i32
      call $func0
      i32.const 13
    end
    i32.ctz
  )
  (func $func7 (result i32)
    loop i32
      call $func0
      i32.const 3
    end
    loop i32
      call $func0
      i32.const 4
    end
    i32.mul
  )
  (func $func8 (result i32)
    loop i32
      call $func0
      i32.const 13
    end
    i32.eqz
  )
  (func $func9 (result i32)
    loop f32
      call $func0
      f32.const 3
    end
    loop f32
      call $func0
      f32.const 3
    end
    f32.gt
  )
  (func $func10 (result i32)
    block i32
      block
        loop
          br 1
          br 0
          unreachable
        end
        unreachable
      end
      block
        loop
          i32.const 1
          br_if 1
          unreachable
        end
        unreachable
      end
      block
        loop
          i32.const 0
          br_table 1
          unreachable
        end
        unreachable
      end
      block
        loop
          i32.const 1
          br_table 1 1 1
          unreachable
        end
        unreachable
      end
      i32.const 19
    end
  )
  (func $func11 (result i32)
    block i32
      loop i32
        i32.const 18
        br 1
        br 0
        i32.const 19
      end
    end
  )
  (func $func12 (result i32)
    block i32
      loop i32
        i32.const 18
        br 1
        i32.const 19
        br 1
        i32.const 20
        i32.const 0
        br_if 1
        drop
        i32.const 20
        i32.const 1
        br_if 1
        drop
        i32.const 21
        br 1
        i32.const 22
        i32.const 0
        br_table 1
        i32.const 23
        i32.const 1
        br_table 1 1 1
        i32.const 21
      end
    end
  )
  (func $func13 (result i32)
    (local $var0 i32)
    block i32
      i32.const 0
      set_local $var0
      get_local $var0
      block i32
        loop i32
          i32.const 1
          br 1
        end
      end
      i32.add
      set_local $var0
      get_local $var0
      block i32
        loop i32
          loop i32
            i32.const 2
            br 2
          end
        end
      end
      i32.add
      set_local $var0
      get_local $var0
      block i32
        loop i32
          block i32
            loop i32
              i32.const 4
              br 1
            end
          end
        end
      end
      i32.add
      set_local $var0
      get_local $var0
      block i32
        loop i32
          i32.const 8
          br 1
          i32.ctz
        end
      end
      i32.add
      set_local $var0
      get_local $var0
      block i32
        loop i32
          loop i32
            i32.const 16
            br 2
          end
          i32.ctz
        end
      end
      i32.add
      set_local $var0
      get_local $var0
    end
  )
  (func $func14 (result i32)
    (local $var0 i32)
    block i32
      i32.const 0
      set_local $var0
      get_local $var0
      loop i32
        loop i32
          br 1
        end
      end
      i32.add
      set_local $var0
      get_local $var0
      loop i32
        br 0
        i32.ctz
      end
      i32.add
      set_local $var0
      get_local $var0
      loop i32
        loop i32
          br 1
        end
        i32.ctz
      end
      i32.add
      set_local $var0
      get_local $var0
    end
  )
  (func $func15 (result i32)
    (local $var0 i32)
    block i32
      block
        loop
          i32.const 1
          set_local $var0
          get_local $var0
          i32.const 3
          i32.mul
          set_local $var0
          get_local $var0
          i32.const 5
          i32.sub
          set_local $var0
          get_local $var0
          i32.const 7
          i32.mul
          set_local $var0
          br 1
          get_local $var0
          i32.const 100
          i32.mul
          set_local $var0
        end
        unreachable
      end
      get_local $var0
      i32.const -14
      i32.eq
    end
  )
  (func $func16 (param $var0 i64) (result i64)
    (local $var1 i64)
    block i64
      i64.const 1
      set_local $var1
      block
        loop
          get_local $var0
          i64.eqz
          br_if 1
          get_local $var0
          get_local $var1
          i64.mul
          set_local $var1
          get_local $var0
          i64.const 1
          i64.sub
          set_local $var0
          br 0
        end
        unreachable
      end
      get_local $var1
    end
  )
  (func $func17 (param $var0 i64) (result i64)
    (local $var1 i64)
    (local $var2 i64)
    block i64
      i64.const 1
      set_local $var1
      i64.const 2
      set_local $var2
      block
        loop
          get_local $var2
          get_local $var0
          i64.gt_u
          br_if 1
          get_local $var1
          get_local $var2
          i64.mul
          set_local $var1
          get_local $var2
          i64.const 1
          i64.add
          set_local $var2
          br 0
        end
        unreachable
      end
      get_local $var1
    end
  )
  (func $func18 (param $var0 f32) (param $var1 f32) (result f32)
    (local $var2 f32)
    (local $var3 f32)
    block f32
      block
        loop
          get_local $var0
          f32.const 0
          f32.eq
          br_if 1
          get_local $var1
          set_local $var2
          block
            loop
              get_local $var2
              f32.const 0
              f32.eq
              br_if 1
              get_local $var2
              f32.const 0
              f32.lt
              br_if 3
              get_local $var3
              get_local $var2
              f32.add
              set_local $var3
              get_local $var2
              f32.const 2
              f32.sub
              set_local $var2
              br 0
            end
            unreachable
          end
          get_local $var3
          get_local $var0
          f32.div
          set_local $var3
          get_local $var0
          f32.const 1
          f32.sub
          set_local $var0
          br 0
        end
        unreachable
      end
      get_local $var3
    end
  )
)
