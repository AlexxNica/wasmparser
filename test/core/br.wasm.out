(module
  (type $type0 (func))
  (type $type1 (func (result i32)))
  (type $type2 (func (result i64)))
  (type $type3 (func (result f32)))
  (type $type4 (func (result f64)))
  (type $type5 (func (param i32 i32) (result i32)))
  (type $type6 (func (param i32 i32 i32) (result i32)))
  (type $type7 (func (param i32 i32 i32) (result i32)))
  (table $table0 1 1 anyfunc)
  (memory 1)
  (export "type-i32" $func1)
  (export "type-i64" $func2)
  (export "type-f32" $func3)
  (export "type-f64" $func4)
  (export "type-i32-value" $func5)
  (export "type-i64-value" $func6)
  (export "type-f32-value" $func7)
  (export "type-f64-value" $func8)
  (export "as-block-first" $func9)
  (export "as-block-mid" $func10)
  (export "as-block-last" $func11)
  (export "as-block-value" $func12)
  (export "as-loop-first" $func13)
  (export "as-loop-mid" $func14)
  (export "as-loop-last" $func15)
  (export "as-br-value" $func16)
  (export "as-br_if-cond" $func17)
  (export "as-br_if-value" $func18)
  (export "as-br_if-value-cond" $func19)
  (export "as-br_table-index" $func20)
  (export "as-br_table-value" $func21)
  (export "as-br_table-value-index" $func22)
  (export "as-return-value" $func23)
  (export "as-if-cond" $func24)
  (export "as-if-then" $func25)
  (export "as-if-else" $func26)
  (export "as-select-first" $func27)
  (export "as-select-second" $func28)
  (export "as-select-cond" $func29)
  (export "as-call-first" $func31)
  (export "as-call-mid" $func32)
  (export "as-call-last" $func33)
  (export "as-call_indirect-func" $func34)
  (export "as-call_indirect-first" $func35)
  (export "as-call_indirect-mid" $func36)
  (export "as-call_indirect-last" $func37)
  (export "as-set_local-value" $func38)
  (export "as-load-address" $func39)
  (export "as-loadN-address" $func40)
  (export "as-store-address" $func41)
  (export "as-store-value" $func42)
  (export "as-storeN-address" $func43)
  (export "as-storeN-value" $func44)
  (export "as-unary-operand" $func45)
  (export "as-binary-left" $func46)
  (export "as-binary-right" $func47)
  (export "as-test-operand" $func48)
  (export "as-compare-left" $func49)
  (export "as-compare-right" $func50)
  (export "as-convert-operand" $func51)
  (export "as-grow_memory-size" $func52)
  (export "nested-block-value" $func53)
  (export "nested-br-value" $func54)
  (export "nested-br_if-value" $func55)
  (export "nested-br_if-value-cond" $func56)
  (export "nested-br_table-value" $func57)
  (export "nested-br_table-value-index" $func58)
  (elem
    (
      i32.const 0
    )
    $func30
  )
  (func $func0
    nop
  )
  (func $func1
    block
      br 0
      i32.ctz
      drop
    end
  )
  (func $func2
    block
      br 0
      i64.ctz
      drop
    end
  )
  (func $func3
    block
      br 0
      f32.neg
      drop
    end
  )
  (func $func4
    block
      br 0
      f64.neg
      drop
    end
  )
  (func $func5 (result i32)
    block i32
      i32.const 1
      br 0
      i32.ctz
    end
  )
  (func $func6 (result i64)
    block i64
      i64.const 2
      br 0
      i64.ctz
    end
  )
  (func $func7 (result f32)
    block f32
      f32.const 3
      br 0
      f32.neg
    end
  )
  (func $func8 (result f64)
    block f64
      f64.const 4
      br 0
      f64.neg
    end
  )
  (func $func9
    block
      br 0
      call $func0
    end
  )
  (func $func10
    block
      call $func0
      br 0
      call $func0
    end
  )
  (func $func11
    block
      nop
      call $func0
      br 0
    end
  )
  (func $func12 (result i32)
    block i32
      nop
      call $func0
      i32.const 2
      br 0
    end
  )
  (func $func13 (result i32)
    block i32
      loop i32
        i32.const 3
        br 1
        i32.const 2
      end
    end
  )
  (func $func14 (result i32)
    block i32
      loop i32
        call $func0
        i32.const 4
        br 1
        i32.const 2
      end
    end
  )
  (func $func15 (result i32)
    block i32
      loop i32
        nop
        call $func0
        i32.const 5
        br 1
      end
    end
  )
  (func $func16 (result i32)
    block i32
      i32.const 9
      br 0
      br 0
    end
  )
  (func $func17
    block
      br 0
      br_if 0
    end
  )
  (func $func18 (result i32)
    block i32
      i32.const 8
      br 0
      i32.const 1
      br_if 0
      drop
      i32.const 7
    end
  )
  (func $func19 (result i32)
    block i32
      i32.const 6
      i32.const 9
      br 0
      br_if 0
      drop
      i32.const 7
    end
  )
  (func $func20
    block
      br 0
      br_table 0 0 0
    end
  )
  (func $func21 (result i32)
    block i32
      i32.const 10
      br 0
      i32.const 1
      br_table 0 0 0
      i32.const 7
    end
  )
  (func $func22 (result i32)
    block i32
      i32.const 6
      i32.const 11
      br 0
      br_table 0 0
      i32.const 7
    end
  )
  (func $func23 (result i64)
    block i64
      i64.const 7
      br 0
      return
    end
  )
  (func $func24 (result i32)
    block i32
      block i32
        i32.const 2
        br 0
        unreachable
      end
    end
  )
  (func $func25 (param $var0 i32) (param $var1 i32) (result i32)
    block i32
      get_local $var0
      if i32
        i32.const 3
        br 1
      else
        get_local $var1
      end
    end
  )
  (func $func26 (param $var0 i32) (param $var1 i32) (result i32)
    block i32
      get_local $var0
      if i32
        get_local $var1
      else
        i32.const 4
        br 1
      end
    end
  )
  (func $func27 (param $var0 i32) (param $var1 i32) (result i32)
    block i32
      i32.const 5
      br 0
      get_local $var0
      get_local $var1
      select
    end
  )
  (func $func28 (param $var0 i32) (param $var1 i32) (result i32)
    block i32
      get_local $var0
      i32.const 6
      br 0
      get_local $var1
      select
    end
  )
  (func $func29 (result i32)
    block i32
      i32.const 0
      i32.const 1
      i32.const 7
      br 0
      select
    end
  )
  (func $func30 (param $var0 i32) (param $var1 i32) (param $var2 i32) (result i32)
    i32.const -1
  )
  (func $func31 (result i32)
    block i32
      i32.const 12
      br 0
      i32.const 2
      i32.const 3
      call $func30
    end
  )
  (func $func32 (result i32)
    block i32
      i32.const 1
      i32.const 13
      br 0
      i32.const 3
      call $func30
    end
  )
  (func $func33 (result i32)
    block i32
      i32.const 1
      i32.const 2
      i32.const 14
      br 0
      call $func30
    end
  )
  (func $func34 (result i32)
    block i32
      i32.const 20
      br 0
      i32.const 1
      i32.const 2
      i32.const 3
      call_indirect $type7
    end
  )
  (func $func35 (result i32)
    block i32
      i32.const 0
      i32.const 21
      br 0
      i32.const 2
      i32.const 3
      call_indirect $type7
    end
  )
  (func $func36 (result i32)
    block i32
      i32.const 0
      i32.const 1
      i32.const 22
      br 0
      i32.const 3
      call_indirect $type7
    end
  )
  (func $func37 (result i32)
    block i32
      i32.const 0
      i32.const 1
      i32.const 2
      i32.const 23
      br 0
      call_indirect $type7
    end
  )
  (func $func38 (result i32)
    (local $var0 f32)
    block i32
      i32.const 17
      br 0
      set_local $var0
      i32.const -1
    end
  )
  (func $func39 (result f32)
    block f32
      f32.const 1.7000000476837158
      br 0
      f32.load align=4
    end
  )
  (func $func40 (result i64)
    block i64
      i64.const 30
      br 0
      i64.load8_s offset=0
    end
  )
  (func $func41 (result i32)
    block i32
      i32.const 30
      br 0
      f64.const 7
      f64.store align=8
      i32.const -1
    end
  )
  (func $func42 (result i32)
    block i32
      i32.const 2
      i32.const 31
      br 0
      i64.store offset=0
      i32.const -1
    end
  )
  (func $func43 (result i32)
    block i32
      i32.const 32
      br 0
      i32.const 7
      i32.store8 offset=0
      i32.const -1
    end
  )
  (func $func44 (result i32)
    block i32
      i32.const 2
      i32.const 33
      br 0
      i64.store16 offset=0
      i32.const -1
    end
  )
  (func $func45 (result f32)
    block f32
      f32.const 3.4000000953674316
      br 0
      f32.neg
    end
  )
  (func $func46 (result i32)
    block i32
      i32.const 3
      br 0
      i32.const 10
      i32.add
    end
  )
  (func $func47 (result i64)
    block i64
      i64.const 10
      i64.const 45
      br 0
      i64.sub
    end
  )
  (func $func48 (result i32)
    block i32
      i32.const 44
      br 0
      i32.eqz
    end
  )
  (func $func49 (result i32)
    block i32
      i32.const 43
      br 0
      f64.const 10
      f64.le
    end
  )
  (func $func50 (result i32)
    block i32
      f32.const 10
      i32.const 42
      br 0
      f32.ne
    end
  )
  (func $func51 (result i32)
    block i32
      i32.const 41
      br 0
      i32.wrap/i64
    end
  )
  (func $func52 (result i32)
    block i32
      i32.const 40
      br 0
      grow_memory
    end
  )
  (func $func53 (result i32)
    i32.const 1
    block i32
      call $func0
      i32.const 4
      i32.const 8
      br 0
      i32.add
    end
    i32.add
  )
  (func $func54 (result i32)
    i32.const 1
    block i32
      i32.const 2
      drop
      block i32
        i32.const 4
        drop
        i32.const 8
        br 1
        br 0
      end
      drop
      i32.const 16
    end
    i32.add
  )
  (func $func55 (result i32)
    i32.const 1
    block i32
      i32.const 2
      drop
      block i32
        i32.const 4
        drop
        i32.const 8
        br 1
        i32.const 1
        br_if 0
        drop
        i32.const 32
      end
      drop
      i32.const 16
    end
    i32.add
  )
  (func $func56 (result i32)
    i32.const 1
    block i32
      i32.const 2
      drop
      i32.const 4
      i32.const 8
      br 0
      br_if 0
      drop
      i32.const 16
    end
    i32.add
  )
  (func $func57 (result i32)
    i32.const 1
    block i32
      i32.const 2
      drop
      block i32
        i32.const 4
        drop
        i32.const 8
        br 1
        i32.const 1
        br_table 0
      end
      drop
      i32.const 16
    end
    i32.add
  )
  (func $func58 (result i32)
    i32.const 1
    block i32
      i32.const 2
      drop
      i32.const 4
      i32.const 8
      br 0
      br_table 0
      i32.const 16
    end
    i32.add
  )
)
